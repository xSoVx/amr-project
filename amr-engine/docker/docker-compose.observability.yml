# Docker Compose configuration for AMR Engine with full observability stack
version: '3.8'

services:
  amr-engine:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: app
    ports:
      - "8080:8080"
    environment:
      - AMR_RULES_PATH=amr_engine/rules/eucast_v_2025_1.yaml
      - ADMIN_TOKEN=dev-admin-token
      - SERVICE_NAME=amr-engine
      - LOG_LEVEL=INFO
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14268/api/traces
      - OTEL_TRACE_SAMPLE_RATE=1.0
      - ENABLE_AUDIT_LOGGING=true
    depends_on:
      - jaeger
      - prometheus
    networks:
      - amr-observability

  jaeger:
    image: jaegertracing/all-in-one:1.50
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - amr-observability

  prometheus:
    image: prom/prometheus:v2.45.0
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - amr-observability

  grafana:
    image: grafana/grafana:10.1.0
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - amr-observability

networks:
  amr-observability:
    driver: bridge

volumes:
  grafana-storage: