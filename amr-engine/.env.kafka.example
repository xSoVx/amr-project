# AMR Engine Configuration with Kafka
SERVICE_NAME=amr-engine
LOG_LEVEL=INFO
AMR_RULES_PATH=amr_engine/rules/eucast_v_2025_1.yaml

# Authentication (optional)
ADMIN_TOKEN=your-admin-token-here
ADMIN_TOKEN_DEVELOPMENT_ONLY=true

# FHIR Configuration
FHIR_PROFILE_PACK=Base
FHIR_VALIDATION_ENABLED=true

# OAuth2 (if enabled)
OAUTH2_ENABLED=false
OAUTH2_ISSUER_URL=
OAUTH2_AUDIENCE=

# mTLS (if enabled)
MTLS_ENABLED=false
MTLS_CA_CERT_PATH=
MTLS_CLIENT_CERT_PATH=
MTLS_CLIENT_KEY_PATH=

# Redis Cache
REDIS_ENABLED=false
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
CACHE_DEFAULT_TTL=3600

# Pseudonymization
PSEUDONYMIZATION_ENABLED=false
PSEUDONYM_SALT_KEY=
PSEUDONYM_ENCRYPTION_KEY=

# ====================================
# KAFKA CONFIGURATION
# ====================================

# Enable Kafka audit streaming
KAFKA_ENABLED=true

# Environment: local, staging, production
KAFKA_ENVIRONMENT=local

# Connection settings
KAFKA_BOOTSTRAP_SERVERS=localhost:9092

# Topic configuration
KAFKA_AUDIT_TOPIC=amr-audit-events
KAFKA_DLQ_TOPIC=amr-audit-events-dlq

# Security settings
KAFKA_SECURITY_PROTOCOL=PLAINTEXT

# SASL Authentication (for staging/production)
# KAFKA_SASL_MECHANISM=SCRAM-SHA-256
# KAFKA_SASL_USERNAME=amr-service
# KAFKA_SASL_PASSWORD=your-password-here

# SSL/TLS Configuration (for production)
# KAFKA_SSL_CA_CERT_PATH=/etc/ssl/certs/kafka-ca.pem
# KAFKA_SSL_CLIENT_CERT_PATH=/etc/ssl/certs/kafka-client.pem
# KAFKA_SSL_CLIENT_KEY_PATH=/etc/ssl/private/kafka-client.key
# KAFKA_SSL_CERT_REQUIRED=true
# KAFKA_SSL_CHECK_HOSTNAME=true

# Schema Registry
KAFKA_SCHEMA_REGISTRY_URL=http://localhost:8081
# KAFKA_SCHEMA_REGISTRY_USERNAME=
# KAFKA_SCHEMA_REGISTRY_PASSWORD=

# Producer Settings
KAFKA_PRODUCER_ACKS=all
KAFKA_PRODUCER_RETRIES=5
KAFKA_PRODUCER_BATCH_SIZE=16384
KAFKA_PRODUCER_LINGER_MS=100

# ====================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ====================================

# LOCAL DEVELOPMENT (Docker Compose):
# KAFKA_ENABLED=true
# KAFKA_ENVIRONMENT=local
# KAFKA_BOOTSTRAP_SERVERS=kafka:29092
# KAFKA_SECURITY_PROTOCOL=PLAINTEXT
# KAFKA_SCHEMA_REGISTRY_URL=http://schema-registry:8081

# STAGING (SASL/SSL):
# KAFKA_ENABLED=true
# KAFKA_ENVIRONMENT=staging
# KAFKA_BOOTSTRAP_SERVERS=staging-kafka:9092
# KAFKA_SECURITY_PROTOCOL=SASL_SSL
# KAFKA_SASL_MECHANISM=SCRAM-SHA-256
# KAFKA_SASL_USERNAME=amr-service-staging
# KAFKA_SASL_PASSWORD=staging-password
# KAFKA_SSL_CA_CERT_PATH=/etc/ssl/certs/kafka-staging-ca.pem
# KAFKA_SCHEMA_REGISTRY_URL=https://staging-schema-registry:8081

# PRODUCTION (mTLS):
# KAFKA_ENABLED=true
# KAFKA_ENVIRONMENT=production
# KAFKA_BOOTSTRAP_SERVERS=prod-kafka-cluster:9093
# KAFKA_SECURITY_PROTOCOL=SSL
# KAFKA_SSL_CA_CERT_PATH=/etc/ssl/certs/kafka-prod-ca.pem
# KAFKA_SSL_CLIENT_CERT_PATH=/etc/ssl/certs/kafka-prod-client.pem
# KAFKA_SSL_CLIENT_KEY_PATH=/etc/ssl/private/kafka-prod-client.key
# KAFKA_SCHEMA_REGISTRY_URL=https://prod-schema-registry:8081
# KAFKA_SCHEMA_REGISTRY_SSL_CA_CERT_PATH=/etc/ssl/certs/sr-prod-ca.pem
# KAFKA_SCHEMA_REGISTRY_SSL_CLIENT_CERT_PATH=/etc/ssl/certs/sr-prod-client.pem
# KAFKA_SCHEMA_REGISTRY_SSL_CLIENT_KEY_PATH=/etc/ssl/private/sr-prod-client.key