[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "amr-engine"
version = "0.2.0"
description = "AMR classification microservice (FastAPI, Python 3.11)"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [{name = "AMR Team"}]
dependencies = [
  "fastapi==0.112.0",
  "uvicorn[standard]==0.30.5",
  "pydantic==2.9.2",
  "pydantic-settings==2.5.2",
  "PyYAML==6.0.2",
  "jsonschema==4.23.0",
  "python-json-logger==2.0.7",
  "prometheus-client==0.20.0",
  "httpx==0.27.0",
  "PyJWT==2.8.0",
  "passlib[bcrypt]==1.7.4",
  "python-multipart==0.0.6",
  "opentelemetry-api==1.20.0",
  "opentelemetry-sdk==1.20.0",
  "opentelemetry-exporter-otlp-proto-grpc==1.20.0",
  "opentelemetry-instrumentation-fastapi==0.41b0",
  "opentelemetry-instrumentation-requests==0.41b0",
  "opentelemetry-instrumentation-sqlalchemy==0.41b0",
  "opentelemetry-propagator-b3==1.20.0",
  "opentelemetry-propagator-jaeger==1.20.0",
  "opentelemetry-semantic-conventions==0.41b0",
  "sqlalchemy==2.0.23",
  "cryptography>=41.0.0",
  "python-jose[cryptography]>=3.3.0"
]

[project.optional-dependencies]
dev = [
  "pytest==8.3.2",
  "pytest-cov==5.0.0",
  "requests==2.32.3",
  "black==24.8.0",
  "ruff==0.6.3",
  "isort==5.13.2",
  "pre-commit==3.8.0"
]

[tool.setuptools.packages.find]
where = ["."]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.black]
line-length = 100
target-version = ['py311']

[tool.isort]
profile = "black"
src_paths = ["amr_engine"]

