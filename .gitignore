# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.
#  For PyCharm Community Edition, use 'Community' instead of 'Professional'
.idea/
*.swp
*.swo

# VS Code
.vscode/
*.code-workspace

# Local environment files
.env.local
.env.development.local
.env.test.local
.env.production.local

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Windows
*.msi
*.cab
*.msm
*.msp

# Logs
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Docker
.dockerignore
docker-compose.override.yml
.docker/

# Kubernetes
*.kubeconfig

# Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

# AMR Engine specific
# Configuration files with secrets
.env.production
.env.staging
config/secrets/
secrets/

# Test coverage and reports
.coverage
htmlcov/
.pytest_cache/
test-results/
test-reports/

# Pact contract files (optional - you may want to commit these)
tests/pacts/*.json

# Local development databases
*.db
*.sqlite
*.sqlite3

# Redis dumps
dump.rdb

# Application logs
app.log
*.log

# Temporary files
tmp/
temp/
.tmp/

# IDE and editor files
*.sublime-project
*.sublime-workspace
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json

# Generated CI/CD files (these are auto-generated by our tools)
docker-compose.pact-broker.yml
.github/workflows/pact-testing.yml
.gitlab-ci.pact.yml
Jenkinsfile.pact

# Local configuration overrides
.claude/settings.local.json

# Keep scripts directory but ignore any generated files in it
scripts/*.log
scripts/temp/
scripts/.cache/

# Monitoring and metrics
prometheus/
grafana/

# SSL certificates and keys
*.pem
*.key
*.crt
*.p12
*.pfx

# Backup files
*.bak
*.backup
*.old

# Dependency directories
node_modules/

# Package lock files (for Python we prefer requirements.txt)
poetry.lock
Pipfile.lock

# Local development scripts
local_dev.py
local_test.py
debug.py

# Performance profiling
*.prof
profile_output/

# Memory dumps
*.dmp

# Core dumps
core.*

# Application specific temporary files
amr_cache/
temp_rules/
test_outputs/